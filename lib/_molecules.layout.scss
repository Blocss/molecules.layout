@charset "UTF-8";
/*! blocss-layout v0.0.0 | MIT License | github.com/Blocss */

/*----------------------------------------------------------------------------*\
    $LAYOUT
    Fluid and nestable layout system based on flexbox
\*----------------------------------------------------------------------------*/

/**
 * Namespacing
 */
$blocss-layout-namespace: $blocss-namespace !default;

/**
 * Module can be disabled by switching `$blocss-use-layout` to `false`
 */
$blocss-use-layout: true !default;

/**
 * The default gutter
 */
$blocss-layout-gutter: $blocss-space !default;



/*  Layout Core
\*----------------------------------------------------------------------------*/

@if $blocss-use-layout == true {

/*  Layout container
\*----------------------------------------------------------------------------*/

/**
 * All content must be contained within child `layout__cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */
.layout {
    display: flex; /* [1] */
    flex-flow: row wrap;
    padding: 0; /* [1] */
    margin-left: 0; /* [1] */
    list-style: none; /* [1] */
}


/**
 * Modifier: center align all layout cells
 */
.layout--align-center {
    justify-content: center;
}


/**
 * Modifier: right align all layout cells
 */
.layout--align-right {
    justify-content: flex-end;
}


/**
 * Modifier: middle-align layout cells
 */
.layout--align-middle {
    align-items: center;
}


/**
 * Modifier: bottom-align layout cells
 */
.layout--align-bottom {
    align-items: flex-end;
}


/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */
.layout--fit {
    > .layout__cell {
        flex: 1 1 0%; /* [1] */
    }
}


/**
 * Modifier: all cells match height of tallest cell in a row
 * 1. The direct child of the flexbox must be a single element when you want
 *    to use equalheight
 */
.layout--equalheight {
    > .layout__cell {
        display: flex;

        > *:only-child {
            width: 100%; /* [1] */
        }
    }
}


/**
 * Modifier: Gutter
 */
.layout--gutter {
    @include rem(margin-left, -$blocss-layout-gutter);

    > .layout__cell {
        @include rem(padding-left, $blocss-layout-gutter);
    }
}



/*  Layout cell
\*----------------------------------------------------------------------------*/

/**
 * No explicit width by default. Rely on combining `layout__cell` with a dimension
 * utility or a component class that extends 'layout'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `layout__cell` container
 */
.layout__cell {
    flex-basis: 100%; /* [1] */
    min-width: 0; /* [2] */
}


/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `layout` object.
 */
.layout__cell--center {
    margin-left: auto;
    margin-right: auto;
}

} // use-layout
